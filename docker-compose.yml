version: "3.3"
services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment: 
      DB_HOST: host.docker.internal #db #192.168.56.1 #db
      DB_DATABASE: laravel
      DB_USERNAME: root #user
      DB_PASSWORD: #root
    ports:
      - 8000:80 # con el 80 es cuando es v -host
    volumes:
      - ./backend:/var/www/html
    # depends_on:
    #   - db
    networks:
      - app
  frontendvue:
    container_name: frontendvue
    build:    
      context: ./vueApp
      dockerfile: Dockerfile
    environment:
    - VUE_APP_URL_API=http://127.0.0.1:8000/api
    tty: true
    ports:
    - 8082:8080
    volumes:
      - ./vueApp:/app/frontendvue
      - /app/frontendvue/node_modules
    depends_on:
      - backend
    networks:
      - app
  # db:
  #   image: mysql:5.7.22
  #   container_name: base_datos
  #   environment:
  #     MYSQL_DATABASE: laravel
  #     MYSQL_USER: user # para evitar el error el nombre del usurio no puede ser root ERROR 1396 (HY000) at line 1: Operation CREATE USER failed for 'root'@'%'
  #     MYSQL_PASSWORD: root 
  #     MYSQL_ROOT_PASSWORD: root
  #   volumes:
  #     - .dbdata:/var/Lib/mysql
  #   networks: 
  #     - app
  #   ports:
  #     - 33060:3306
  # phpmyadmin:
  #   depends_on:
  #     - db
  #   image: phpmyadmin/phpmyadmin
  #   restart: always
  #   ports:
  #     - 8081:80
  #   environment:
  #     PMA_HOST: db
  #     MYSQL_ROOT_PASSWORD: root
  #   networks: 
  #     - app
  
networks: 
  app:
    driver: bridge
# docker-compose up --build
# docker-compose up --build
# docker-compose exec container_name sh

# version: '3'
# services:
#     www:
#         image: nginx:alpine
#         volumes:
#             - ./etc/nginx/conf.d/default.conf.nginx:/etc/nginx/conf.d/default.conf
#         ports:
#             - 81:80
#         depends_on:
#             - backend
#             - frontend

#     frontend:
#         image: node:current-alpine
#         # user: ${UID}:${UID}
#         working_dir: /home/node/app
#         volumes:
#             - ./frontend:/home/node/app
#         environment:
#             NODE_ENV: development
#         command: "npm run serve"

#     backend:
#         build:
#             context: dockerize/backend
#         # this way container interacts with host on behalf of current user.
#         # !!! NOTE: $UID is a _shell_ variable, not an environment variable!
#         # To make it available as a shell var, make sure you have this in your ~/.bashrc (./.zshrc etc):
#         # export UID="$UID"
#         # user: ${UID}:${UID}

#         volumes:
#             - ./backend:/app
#             # custom adjustments to php.ini
#             # i. e. "xdebug.remote_host" to debug the dockerized app
#             - ./etc/php:/usr/local/etc/php/local.conf.d/
#         environment:
#             # add our custom config files for the php to scan
#             PHP_INI_SCAN_DIR: "/usr/local/etc/php/conf.d/:/usr/local/etc/php/local.conf.d/"
#         command: "php artisan serve --host=0.0.0.0 --port=8080"

#     mysql:
#         image: mysql:5.7.22
#         container_name: mysql
#         restart: unless-stopped
#         tty: true
#         ports:
#             - "4306:3306"
#         volumes:
#             - ./etc/mysql:/var/lib/mysql
#         environment:
#             MYSQL_DATABASE: tor
#             MYSQL_USER: root
#             MYSQL_PASSWORD: root
#             MYSQL_ROOT_PASSWORD: root
#             SERVICE_TAGS: dev
#             SERVICE_NAME: mysql
